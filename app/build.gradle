apply plugin: 'com.android.application'

android {
    compileSdk 34
    namespace = "com.nass.ek.w3kiosk"
    android.buildFeatures.buildConfig true
    def keyProps = new Properties()
    def keyPropsFile = rootProject.file('keystore/credentials')

    if (keyPropsFile.exists()) {
        keyProps.load(new FileInputStream(keyPropsFile))
    } else {
        throw new GradleException("Keystore credentials file not found: ${keyPropsFile}")
    }
    lintOptions {
        warningsAsErrors false
        abortOnError false
    }

    signingConfigs {
        dev {
            v2SigningEnabled true
        }
    }

    defaultConfig {
        applicationId "com.nass.ek.w3kiosk"
        minSdkVersion 19
        targetSdkVersion 32
        multiDexEnabled true
        versionCode rootProject.ext.verCode
        versionName rootProject.ext.verName

        setProperty("archivesBaseName", "w3kiosk-$versionName")
        def buildTime = new Date()
        def apiName = keyProps['apiName']
        def apiKey = keyProps['apiKey']
        def apiUrl = keyProps['apiUrl']
        def updateUrl = keyProps['updateUrl']
        buildConfigField "String", "BUILD_TIME", "\"${buildTime.format('dd.MM.yyyy HH:mm:ss')}\""
        buildConfigField "String", "API_NAME", "${apiName}"
        buildConfigField "String", "API_KEY", "${apiKey}"
        buildConfigField "String", "API_URL", "${apiUrl}"
        buildConfigField "String", "UPDATE_URL", "${updateUrl}"


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keyProps['keyAlias']
            keyPassword keyProps['keyPassword']
            storeFile keyProps['storeFile'] ? file(keyProps['storeFile']) : null
            storePassword keyProps['storePassword']
        }
    }

    buildTypes {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'com.github.QuadFlask:colorpicker:0.0.13'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation project(':appupdate')
}